name: CI/CD Pileline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # - name: Set up Python 3.12
    #   uses: actions/setup-python@v2
    #   with:
    #     python-version: '3.12'

    # - name: Install dependencies
    #   run: |
    #     python -m venv .venv
    #     source .venv/bin/activate
    #     cd backend
    #     pip install -r requirements.txt

    # - name: Run tests FastAPI
    #   run: |
    #     source .venv/bin/activate
    #     pytest 
    
    # - name: Setup tests NextJS
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: '18'

    # - name: Install dependencies NextJS
    #   run: |
    #     cd frontend
    #     npm install --force
    
    # - name: Run tests NextJS
    #   run: |
    #     cd frontend
    #     npm run test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # - name: Set environment variables
      #   run: |
      #     echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV

      # - name: Install Docker Compose
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y docker-compose
      #     docker compose version

      # - name: Docker Login
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and Push Docker Images with Compose
      #   run: |
      #     docker-compose -f docker-compose.yml build --pull --no-cache
      #     docker-compose -f docker-compose.yml push

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2

      - name: setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.11.4
          terraform_wrapper: false
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: |
          terraform init
        working-directory: ./terraform
      
      - name: Terraform Plan
        run: |
          terraform plan \
          -var="JWT_SECRET=${{ secrets.JWT_SECRET }}" \
          -var="AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -var="AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -var="fastapi_image_url=docker.io/${{ secrets.DOCKER_USERNAME }}/demo-exam-app:backend" \
          -var="nextjs_image_url=docker.io/${{ secrets.DOCKER_USERNAME }}/demo-exam-app:frontend" \
          -out=tfplan
        working-directory: ./terraform

      - name: Terraform Apply
        run: |
          terraform apply tfplan
        working-directory: ./terraform